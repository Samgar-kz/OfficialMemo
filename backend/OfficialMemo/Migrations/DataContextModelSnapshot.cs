// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfficialMemo.Context;

#nullable disable

namespace OfficialMemo.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("OffMemo")
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OfficialMemo.Logging.BusinessProcessLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessName");

                    b.ToTable("LogEntries", "DocEx");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.ApprovalResultDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApproverCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverCode");

                    b.HasIndex("ExecutorCode");

                    b.HasIndex("MessageId");

                    b.ToTable("ApprovalResults", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.ConfidenceTypeDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayTextKz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayTextRu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfidenceTypes", "DocEx");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.DepCodeToRegCode", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("DepCodeToRegCodes", "DocEx");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.EmployeeDbo", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Iin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("bit");

                    b.Property<string>("LocalPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentDepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionKz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable((string)null);

                    b.ToView("v_Employees", "DocEx");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.EmployeePositionsDbo", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("En")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PositionEn");

                    b.Property<string>("Kz")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PositionKz");

                    b.Property<string>("LocalPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ru")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PositionRu");

                    b.HasKey("UserCode");

                    b.ToTable("EmployeePositions", "DocEx");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.IndexNomenclatureDbo", b =>
                {
                    b.Property<string>("Index")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("IndexNomenclatures", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoApprover", b =>
                {
                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ApproversLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("OfficialMemoDboMessageGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Order", "ApproversLogin", "OfficialMemoDboMessageGuid");

                    b.HasIndex("ApproversLogin");

                    b.HasIndex("OfficialMemoDboMessageGuid");

                    b.ToTable("EmployeeDboOfficialMemoDbo", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoDbo", b =>
                {
                    b.Property<Guid>("MessageGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AmountPage")
                        .HasColumnType("int");

                    b.Property<bool>("ApprovalRequired")
                        .HasColumnType("bit");

                    b.Property<string>("ApproveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfidenceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutorCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IndexNomenclature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MessageDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginalDocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrarCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RegistrarRequired")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SignDataMessageGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SignerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerticalText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageGuid");

                    b.HasIndex("ConfidenceTypeId");

                    b.HasIndex("ExecutorCode");

                    b.HasIndex("SignDataMessageGuid");

                    b.HasIndex("SignerCode");

                    b.ToTable("OfficialMemo", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoProcessDataDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DepId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FINISH_DATE");

                    b.Property<string>("InitiatorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MessageGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OriginRequestGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProcessCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PROCESS_CODE");

                    b.Property<Guid>("ProcessGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PROCESS_GUID");

                    b.Property<string>("ProcessStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PROCESS_STATUS");

                    b.Property<decimal>("ProcessVersion")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PROCESS_VERSION");

                    b.Property<string>("RegNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageGuid")
                        .IsUnique();

                    b.ToTable("OfficialMemoProcessData", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoRecipient", b =>
                {
                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("RecipientsLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("OfficialMemoDboMessageGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Order", "RecipientsLogin", "OfficialMemoDboMessageGuid");

                    b.HasIndex("OfficialMemoDboMessageGuid");

                    b.HasIndex("RecipientsLogin");

                    b.ToTable("RecipientDboOfficialMemoDbo", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.ReceivingResultDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReceiverCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExecutorCode");

                    b.HasIndex("MessageId");

                    b.HasIndex("ReceiverCode");

                    b.ToTable("ReceivingResults", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.SignMessageDbo", b =>
                {
                    b.Property<Guid>("MessageGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterSignedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisterSignedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignType")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SignedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MessageGuid");

                    b.HasIndex("SignedBy");

                    b.ToTable("SignedData", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.WorkAndArchiveDbo", b =>
                {
                    b.Property<string>("ApproveType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfidenceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DueToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ExecutorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedBackTool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiatorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProcessGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProcessStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("v_AllArchiveAndWork", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.ProcessModels.Poco.ProcessMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalDecision")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("approvalDec");

                    b.Property<string>("ApprovalDecisionName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("approvalDecn");

                    b.Property<string>("ApprovalDocuments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ApprovalRequired")
                        .HasColumnType("bit");

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("ApproverCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChildCount")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DueToDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ExecutorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageDocuments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MessageGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginRequestGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreviousTaskGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProcessGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RegistrarRequired")
                        .HasColumnType("bit");

                    b.Property<string>("ReplyComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyDecision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyDecisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyDocuments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RequestGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ResponseRecieved")
                        .HasColumnType("bit");

                    b.Property<string>("StepName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaskGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.ToView("v_MessageHistory", "OffMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.ApprovalResultDbo", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficialMemo.Models.Dbo.OfficialMemoDbo", null)
                        .WithMany("ApprovalResults")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Approver");

                    b.Navigation("Executor");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.EmployeePositionsDbo", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Employee")
                        .WithOne()
                        .HasForeignKey("OfficialMemo.Models.Dbo.EmployeePositionsDbo", "UserCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoApprover", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproversLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficialMemo.Models.Dbo.OfficialMemoDbo", "OfficialMemo")
                        .WithMany("OfficialMemoApprovers")
                        .HasForeignKey("OfficialMemoDboMessageGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("OfficialMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoDbo", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.ConfidenceTypeDbo", "ConfidenceType")
                        .WithMany()
                        .HasForeignKey("ConfidenceTypeId");

                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorCode");

                    b.HasOne("OfficialMemo.Models.Dbo.SignMessageDbo", "SignData")
                        .WithMany()
                        .HasForeignKey("SignDataMessageGuid");

                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Signer")
                        .WithMany()
                        .HasForeignKey("SignerCode");

                    b.Navigation("ConfidenceType");

                    b.Navigation("Executor");

                    b.Navigation("SignData");

                    b.Navigation("Signer");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoProcessDataDbo", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.OfficialMemoDbo", "OfficialMemo")
                        .WithOne("ProcessData")
                        .HasForeignKey("OfficialMemo.Models.Dbo.OfficialMemoProcessDataDbo", "MessageGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfficialMemo");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoRecipient", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.OfficialMemoDbo", "OfficialMemo")
                        .WithMany("OfficialMemoRecipients")
                        .HasForeignKey("OfficialMemoDboMessageGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientsLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfficialMemo");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.ReceivingResultDbo", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficialMemo.Models.Dbo.OfficialMemoDbo", null)
                        .WithMany("ReceivingResults")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Executor");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.SignMessageDbo", b =>
                {
                    b.HasOne("OfficialMemo.Models.Dbo.EmployeeDbo", "Signer")
                        .WithMany()
                        .HasForeignKey("SignedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Signer");
                });

            modelBuilder.Entity("OfficialMemo.Models.Dbo.OfficialMemoDbo", b =>
                {
                    b.Navigation("ApprovalResults");

                    b.Navigation("OfficialMemoApprovers");

                    b.Navigation("OfficialMemoRecipients");

                    b.Navigation("ProcessData")
                        .IsRequired();

                    b.Navigation("ReceivingResults");
                });
#pragma warning restore 612, 618
        }
    }
}
